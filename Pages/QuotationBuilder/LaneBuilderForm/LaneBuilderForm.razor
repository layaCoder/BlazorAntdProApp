@namespace BlazorAntdProApp.Pages.QuotationBuilder
@using BlazorAntdProApp.Models.QuotationBuilder.LaneBuilderForm

<div>
    <Card BodyStyle="background-color:#D8DFEB;">
        <Form Model="@lane"
              Layout="@FormLayout.Horizontal"
              @ref="form"
              OnFinish="OnFinish"
              OnFinishFailed="OnFinishFailed"
              LabelColSpan="8"
              WrapperColSpan="16">
            <Row Gutter="24">
                <GridCol Span="6">
                    <FormItem Label="Carrier">
                        <Select TItem="string"
                                Mode="multiple"
                                EnableSearch
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.Carrier">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("F14-1")" Label="Colt1-1" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("F14-2")" Label="Colt1-2" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("F16-1")" Label="Colt2-1" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Build From">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("OriginPort")" Label="Origin Prot" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("DestinationProt")" Label="Destination Prot" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Origin">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.OriginPort">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("Dallas")" Label="Dallas" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("Buffalo")" Label="Buffalo" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Destination">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.DestinationPort">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("Georgia")" Label="Georgia" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("Mariana")" Label="Mariana" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
            </Row>
            <Row Gutter="24">
                <GridCol Span="6">
                    <FormItem Label="Routing">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.Routing">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("PLAN A")" Label="PLAN A" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("PLAN B")" Label="PLAN B" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Need Delivery">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("Yes")" Label="Yes" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("No")" Label="No" />
                                <SelectOption TItem="string" TItemValue="string" Value="@("Incl")" Label="Incl" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Door Rate">
                        <Select TItem="int"
                                TItemValue="int"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.DoorRate">
                            <SelectOptions>
                                <SelectOption TItem="int" TItemValue="int" Value=99 Label="99" />
                                <SelectOption TItem="int" TItemValue="int" Value=101 Label="101" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="Door">
                        <Select TItem="string"
                                TItemValue="string"
                                Placeholder="Please select"
                                Style="width: 220px;"
                                @bind-Value="@context.DestinationDoor">
                            <SelectOptions>
                                <SelectOption TItem="string" TItemValue="string" Value="@("Black Gate")" Label="Black Gate" />
                            </SelectOptions>
                        </Select>
                    </FormItem>
                </GridCol>

            </Row>
            <Row>
                <GridCol Span="24" Style="text-align:right;">
                    <Button Type="@ButtonType.Primary"
                            HtmlType="submit"
                            Style="background-color:#0D76BD;">
                        Add a row
                    </Button>
                </GridCol>
            </Row>
        </Form>
    </Card>


    <Table DataSource="listOfData" RowClassName="@(_=>"editable-row")" Bordered>
        <PropertyColumn Width="30%" Property="c=>c.Carrier" HeaderStyle="@tableHeaderStyle">
            @if (editId == context.Id)
            {
                <Input Type="text" @bind-Value="context.Carrier" OnBlur="stopEdit" AutoFocus />
            }
            else
            {
                <div class="editable-cell-value-wrap" style="padding-right:24px" @onclick="()=>startEdit(context.Id)">
                    @context.Carrier
                </div>
            }
        </PropertyColumn>
        <PropertyColumn Property="c=>c.OriginProt" HeaderStyle="@tableHeaderStyle"></PropertyColumn>
        <PropertyColumn Property="c=>c.Routing" HeaderStyle="@tableHeaderStyle"></PropertyColumn>
        <PropertyColumn Property="c=>c.DestinationPort" HeaderStyle="@tableHeaderStyle"></PropertyColumn>
        <PropertyColumn Property="c=>c.DestinationDoor" HeaderStyle="@tableHeaderStyle"></PropertyColumn>
        <PropertyColumn Property="c=>c.DoorRate" HeaderStyle="@tableHeaderStyle"></PropertyColumn>
        <ActionColumn Title="Action" HeaderStyle="@tableHeaderStyle">
            <Popconfirm Title="Sure to delete?"
                        OnConfirm="()=> deleteRow(context.Id)"
                        OkText="Yes"
                        CancelText="No">
                <a style="color:#B0282F">Delete</a>
            </Popconfirm>
        </ActionColumn>
    </Table>
    <Divider>
        <Button OnClick="goPreviousStep">Previous</Button>
        <Button Type="@ButtonType.Primary" OnClick="goNextStep" Style="background-color:#0D76BD;">Next</Button>
    </Divider>
</div>

<style>
    .editable-cell {
        position: relative;
    }

    .editable-cell-value-wrap {
        padding: 5px 12px;
        cursor: pointer;
    }

    .editable-row:hover .editable-cell-value-wrap {
        padding: 4px 11px;
        border: 1px solid #d9d9d9;
        border-radius: 4px;
    }

    [data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {
        border: 1px solid #434343;
    }
</style>

@using System.Text.Json;
@code {
    [Parameter]
    public Action goNextStep { get; set; }
    [Parameter]
    public Action goPreviousStep { get; set; }
    int i = 0;
    string editId;

  

    string tableHeaderStyle = "background:#275594;color:#fff;";
    

    private Lane lane = new Lane();
    private Form<Lane> form;



    record CarrierItemData(string Id, string OriginProt, string Routing, string DestinationPort, string DestinationDoor, int DoorRate)
    {
        public string Carrier { get; set; }
    }


    // ItemData[] listOfData = { };
    CarrierItemData[] listOfData = { };
    void addRow()
    {
        // listOfData = listOfData.Append(new($"{i}", "32", $"London, Park Lane no. {i}") { Name = $"Edward King {i}" });
        listOfData = listOfData.Append(new($"{i}", "ONE(USA)", "", "DALLAS,TX", "Evans,Dalaas", 1000) { Carrier = $"DarkStar {i}" });
        i++;
    }

    void deleteRow(string id)
    {
        listOfData = listOfData.Where(d => d.Id != id).ToArray();
    }

    void startEdit(string id)
    {
        editId = id;
    }

    void stopEdit()
    {
        var editedData = listOfData.FirstOrDefault(x => x.Id == editId);
        Console.WriteLine(JsonSerializer.Serialize(editedData));
        editId = null;
    }

    protected override void OnInitialized()
    {
        addRow();
        addRow();
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(lane)}");
        var res = JsonSerializer.Serialize(lane);
        // (string Id, string OriginProt, string Routing, string DestinationPort, string DestinationDoor, int DoorRate)
        listOfData = listOfData.Append(new($"{lane.Id}", $"{lane.OriginPort}", $"{lane.Routing}", $"{lane.DestinationPort}", $"{lane.DestinationDoor}", lane.DoorRate) { Carrier = $"{lane.Carrier.ToString()}" });
        form.Reset();
    }

    private void OnFinishFailed(EditContext editContext)
    {

        Console.WriteLine($"Failed:{JsonSerializer.Serialize(lane)}");
    }
}